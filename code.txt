#include <SPI.h> //INCLUSÃO DE BIBLIOTECA
#include <MFRC522.h> //INCLUSÃO DE BIBLIOTECA

#define SS_PIN 10 //PINO SDA
#define RST_PIN 9 //PINO DE RESET

MFRC522 rfid(SS_PIN, RST_PIN); //PASSAGEM DE PARÂMETROS REFERENTE AOS PINOS


void setup() {
  Serial.begin(9600); // opens serial port, sets data rate to 9600 bps
  pinMode(4, OUTPUT);
  pinMode(7, OUTPUT);

  Serial.begin(9600); //INICIALIZA A SERIAL
  SPI.begin(); //INICIALIZA O BARRAMENTO SPI
  rfid.PCD_Init(); //INICIALIZA MFRC522
  Serial.println("iniciou");
}


void loop() {
  digitalWrite(4, LOW);
  digitalWrite(7, LOW);
  String passe = Serial.readString();
  if (passe == ""){
    return;
  }
//  if (passe.equals("setCards")){
//      String allowedCards[4] = {"508430\n","b", "509764\n","d"};
//      int allowedCardsSize = sizeof(allowedCards)/sizeof(allowedCards[0]);
//  }
  String allowedCards[4] = {"508430\n","b", "509764\n","d"};
  int allowedCardsSize = sizeof(allowedCards)/sizeof(allowedCards[0]);
  bool allowed = false;
  
  if (passe.length() != 7){
    return;
  }
  
  Serial.print("STRING FORMAT: ");
  Serial.println(passe);
  
  for(int i = 0; i < allowedCardsSize; i++){
    if (passe.equalsIgnoreCase(allowedCards[i])){
      allowed = true;
    }
  }
  if (allowed){
    digitalWrite(4, HIGH);
    Serial.println("Serto");
    while (true){
       if (pulseira()){
        break;
       }
    }
    Serial.println("passou");
  }else{
    digitalWrite(7, HIGH);
    delay(1000);
    Serial.println("EDV [C A N C E L A D O]");
  }
    
  
}

bool pulseira(){
  if (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial()) //VERIFICA SE O CARTÃO PRESENTE NO LEITOR É DIFERENTE DO ÚLTIMO CARTÃO LIDO. CASO NÃO SEJA, FAZ
    return false; //RETORNA PARA LER NOVAMENTE

  /***INICIO BLOCO DE CÓDIGO RESPONSÁVEL POR GERAR A TAG RFID LIDA***/
  String strID = "";
  for (byte i = 0; i < 4; i++) {
    strID +=
    (rfid.uid.uidByte[i] < 0x10 ? "0" : "") +
    String(rfid.uid.uidByte[i], HEX) +
    (i!=3 ? ":" : "");
  }
  strID.toUpperCase();
  /***FIM DO BLOCO DE CÓDIGO RESPONSÁVEL POR GERAR A TAG RFID LIDA***/

  Serial.print("Identificador (UID) da tag: "); //IMPRIME O TEXTO NA SERIAL
  Serial.println(strID); //IMPRIME NA SERIAL O UID DA TAG RFID

  rfid.PICC_HaltA(); //PARADA DA LEITURA DO CARTÃO
  rfid.PCD_StopCrypto1(); //PARADA DA CRIPTOGRAFIA NO PCD
  if (strID == "9C:F8:67:23"){
    Serial.print("Pulseira 3");
    return true;

  }
  if (strID == "40:D8:21:D9"){
    Serial.print("Pulseira 2");
    return true;
  }
  if (strID == "30:7C:6D:8B"){
    Serial.print("Pulseira 1");
    return true;
  }
  return false;

}
